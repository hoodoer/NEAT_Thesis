#############################################################################
# Makefile for building: competitiveCoevolution
# Generated by qmake (2.01a) (Qt 4.8.7) on: Tue Dec 12 10:42:30 2017
# Project:  competitiveCoevolution.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile competitiveCoevolution.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -w -O2 -march=native -fomit-frame-pointer -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4 -Incd -Incd/complearn -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lz -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = robotAgent.cpp \
		phenotype.cpp \
		networkserver.cpp \
		genotype.cpp \
		gameworld.cpp \
		CSpecies.cpp \
		competitiveCoevolutionNeatMain.cpp \
		CInnovation.cpp \
		Cga.cpp \
		networkserverthread.cpp \
		ncdBehaviorFuncs.cpp \
		ncd/osutil.cpp \
		ncd/compression-bridge.cpp \
		ncd/cl-util.cpp \
		ncd/cl-options.cpp \
		ncd/cl-core.cpp \
		ncd/cl-command.cpp \
		sharedMemory.cpp moc_networkserver.cpp \
		moc_networkserverthread.cpp
OBJECTS       = robotAgent.o \
		phenotype.o \
		networkserver.o \
		genotype.o \
		gameworld.o \
		CSpecies.o \
		competitiveCoevolutionNeatMain.o \
		CInnovation.o \
		Cga.o \
		networkserverthread.o \
		ncdBehaviorFuncs.o \
		osutil.o \
		compression-bridge.o \
		cl-util.o \
		cl-options.o \
		cl-core.o \
		cl-command.o \
		sharedMemory.o \
		moc_networkserver.o \
		moc_networkserverthread.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		competitiveCoevolution.pro
QMAKE_TARGET  = competitiveCoevolution
DESTDIR       = 
TARGET        = competitiveCoevolution

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: competitiveCoevolution.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile competitiveCoevolution.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix -o Makefile competitiveCoevolution.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/competitiveCoevolution1.0.0 || $(MKDIR) .tmp/competitiveCoevolution1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/competitiveCoevolution1.0.0/ && $(COPY_FILE) --parents utils.h timer.h SVector2D.h robotAgent.h phenotype.h parameters.h networkserver.h mathVector.h mathMatrix.h lineIntersect2D.h genotype.h genes.h gameworld.h CSpecies.h CInnovation.h Cga.h networkserverthread.h competitiveCoevolutionNeat.h ncdBehaviorFuncs.h ncd/osutil.h ncd/compression-bridge.h ncd/cl-util.h ncd/cl-internal.h ncd/complearn/cl-options.h ncd/complearn/cl-core.h ncd/complearn/cl-command.h zlibNcd.h sharedMemory.h .tmp/competitiveCoevolution1.0.0/ && $(COPY_FILE) --parents robotAgent.cpp phenotype.cpp networkserver.cpp genotype.cpp gameworld.cpp CSpecies.cpp competitiveCoevolutionNeatMain.cpp CInnovation.cpp Cga.cpp networkserverthread.cpp ncdBehaviorFuncs.cpp ncd/osutil.cpp ncd/compression-bridge.cpp ncd/cl-util.cpp ncd/cl-options.cpp ncd/cl-core.cpp ncd/cl-command.cpp sharedMemory.cpp .tmp/competitiveCoevolution1.0.0/ && (cd `dirname .tmp/competitiveCoevolution1.0.0` && $(TAR) competitiveCoevolution1.0.0.tar competitiveCoevolution1.0.0 && $(COMPRESS) competitiveCoevolution1.0.0.tar) && $(MOVE) `dirname .tmp/competitiveCoevolution1.0.0`/competitiveCoevolution1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/competitiveCoevolution1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_networkserver.cpp moc_networkserverthread.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_networkserver.cpp moc_networkserverthread.cpp
moc_networkserver.cpp: networkserverthread.h \
		competitiveCoevolutionNeat.h \
		robotAgent.h \
		phenotype.h \
		utils.h \
		genes.h \
		SVector2D.h \
		parameters.h \
		timer.h \
		mathVector.h \
		mathMatrix.h \
		gameworld.h \
		lineIntersect2D.h \
		networkserver.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) networkserver.h -o moc_networkserver.cpp

moc_networkserverthread.cpp: competitiveCoevolutionNeat.h \
		robotAgent.h \
		phenotype.h \
		utils.h \
		genes.h \
		SVector2D.h \
		parameters.h \
		timer.h \
		mathVector.h \
		mathMatrix.h \
		gameworld.h \
		lineIntersect2D.h \
		networkserverthread.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) networkserverthread.h -o moc_networkserverthread.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

robotAgent.o: robotAgent.cpp robotAgent.h \
		phenotype.h \
		utils.h \
		genes.h \
		SVector2D.h \
		parameters.h \
		timer.h \
		mathVector.h \
		mathMatrix.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o robotAgent.o robotAgent.cpp

phenotype.o: phenotype.cpp phenotype.h \
		utils.h \
		genes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o phenotype.o phenotype.cpp

networkserver.o: networkserver.cpp networkserver.h \
		networkserverthread.h \
		competitiveCoevolutionNeat.h \
		robotAgent.h \
		phenotype.h \
		utils.h \
		genes.h \
		SVector2D.h \
		parameters.h \
		timer.h \
		mathVector.h \
		mathMatrix.h \
		gameworld.h \
		lineIntersect2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o networkserver.o networkserver.cpp

genotype.o: genotype.cpp genotype.h \
		phenotype.h \
		utils.h \
		genes.h \
		CInnovation.h \
		parameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o genotype.o genotype.cpp

gameworld.o: gameworld.cpp gameworld.h \
		SVector2D.h \
		mathVector.h \
		mathMatrix.h \
		timer.h \
		robotAgent.h \
		phenotype.h \
		utils.h \
		genes.h \
		parameters.h \
		lineIntersect2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gameworld.o gameworld.cpp

CSpecies.o: CSpecies.cpp CSpecies.h \
		genotype.h \
		phenotype.h \
		utils.h \
		genes.h \
		CInnovation.h \
		parameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CSpecies.o CSpecies.cpp

competitiveCoevolutionNeatMain.o: competitiveCoevolutionNeatMain.cpp networkserver.h \
		networkserverthread.h \
		competitiveCoevolutionNeat.h \
		robotAgent.h \
		phenotype.h \
		utils.h \
		genes.h \
		SVector2D.h \
		parameters.h \
		timer.h \
		mathVector.h \
		mathMatrix.h \
		gameworld.h \
		lineIntersect2D.h \
		Cga.h \
		genotype.h \
		CInnovation.h \
		CSpecies.h \
		sharedMemory.h \
		ncdBehaviorFuncs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o competitiveCoevolutionNeatMain.o competitiveCoevolutionNeatMain.cpp

CInnovation.o: CInnovation.cpp CInnovation.h \
		utils.h \
		genotype.h \
		phenotype.h \
		genes.h \
		parameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CInnovation.o CInnovation.cpp

Cga.o: Cga.cpp Cga.h \
		phenotype.h \
		utils.h \
		genes.h \
		genotype.h \
		CInnovation.h \
		parameters.h \
		CSpecies.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Cga.o Cga.cpp

networkserverthread.o: networkserverthread.cpp networkserverthread.h \
		competitiveCoevolutionNeat.h \
		robotAgent.h \
		phenotype.h \
		utils.h \
		genes.h \
		SVector2D.h \
		parameters.h \
		timer.h \
		mathVector.h \
		mathMatrix.h \
		gameworld.h \
		lineIntersect2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o networkserverthread.o networkserverthread.cpp

ncdBehaviorFuncs.o: ncdBehaviorFuncs.cpp ncdBehaviorFuncs.h \
		competitiveCoevolutionNeat.h \
		robotAgent.h \
		phenotype.h \
		utils.h \
		genes.h \
		SVector2D.h \
		parameters.h \
		timer.h \
		mathVector.h \
		mathMatrix.h \
		gameworld.h \
		lineIntersect2D.h \
		zlibNcd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ncdBehaviorFuncs.o ncdBehaviorFuncs.cpp

osutil.o: ncd/osutil.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o osutil.o ncd/osutil.cpp

compression-bridge.o: ncd/compression-bridge.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o compression-bridge.o ncd/compression-bridge.cpp

cl-util.o: ncd/cl-util.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cl-util.o ncd/cl-util.cpp

cl-options.o: ncd/cl-options.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cl-options.o ncd/cl-options.cpp

cl-core.o: ncd/cl-core.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cl-core.o ncd/cl-core.cpp

cl-command.o: ncd/cl-command.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cl-command.o ncd/cl-command.cpp

sharedMemory.o: sharedMemory.cpp sharedMemory.h \
		competitiveCoevolutionNeat.h \
		robotAgent.h \
		phenotype.h \
		utils.h \
		genes.h \
		SVector2D.h \
		parameters.h \
		timer.h \
		mathVector.h \
		mathMatrix.h \
		gameworld.h \
		lineIntersect2D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sharedMemory.o sharedMemory.cpp

moc_networkserver.o: moc_networkserver.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_networkserver.o moc_networkserver.cpp

moc_networkserverthread.o: moc_networkserverthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_networkserverthread.o moc_networkserverthread.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

